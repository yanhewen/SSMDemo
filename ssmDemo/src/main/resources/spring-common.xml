<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- Mybatis和Spring的整合 -->
  <!-- 1. 数据源 : DriverManagerDataSource -->
  <bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3306/db_zsl" />
    <property name="username" value="root" />
    <property name="password" value="root" />
  </bean>

  <!--
      2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源

      MyBatis定义数据源,同意加载配置
  -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="configLocation" value="classpath:mybatis-config.xml" />
  </bean>

  <!--
      3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

      basePackage:指定sql映射文件/接口所在的包（自动扫描）
  -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.lyt.mapper"></property>
    <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
  </bean>

  <!--
      4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源
  -->
  <bean id="txManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
  </bean>

  <!-- 5. 使用声明式事务
       transaction-manager：引用上面定义的事务管理器
   -->
  <tx:annotation-driven transaction-manager="txManager" />
</beans>